import numpy as np

w = {	# c와 동일
    2: [1, 1],
    3: [5/9, 8/9, 5/9],
    4: [(18-np.sqrt(30))/36, 
        (18+np.sqrt(30))/36,
        (18+np.sqrt(30))/36,
        (18-np.sqrt(30))/36],
    5: [(322-13*np.sqrt(70))/900, 
        (322+13*np.sqrt(70))/900, 
        128/225, 
        (322+13*np.sqrt(70))/900, 
        (322-13*np.sqrt(70))/900], 
    6: [0.1713245,
        0.3607616,
        0.4679139,
        0.4679139,
        0.3607616,
        0.1713245],
}

x = {
    2: [-1/np.sqrt(3), 1/np.sqrt(3)],
    3: [-np.sqrt(3/5), 0, np.sqrt(3/5)],
    4: [-np.sqrt((3+2*np.sqrt(6/5))/7), 
        -np.sqrt((3-2*np.sqrt(6/5))/7), 
         np.sqrt((3-2*np.sqrt(6/5))/7), 
        np.sqrt((3+2*np.sqrt(6/5))/7)], 
    5: [-(1/3)*np.sqrt(5 + 2*np.sqrt(10/7)),
        -(1/3)*np.sqrt(5 - 2*np.sqrt(10/7)),
         0,
         (1/3)*np.sqrt(5 - 2*np.sqrt(10/7)),
         (1/3)*np.sqrt(5 + 2*np.sqrt(10/7))],
    6: [-0.932469514,
        -0.661209386,
        -0.238619186,
         0.238619186,
         0.661209386,
         0.932469514],
}

g = 9.8
c = 12.5
m = 68.1

def d(t):
    return (g*m/c)*(1 - np.exp(-c*t/m))

I_true = 289.4351

a = 0
b = 10

I = {}
for i in range(2,7):
    I[i] = np.dot(w[i], d(((b+a) + (b-a)*np.array(x[i]))/2))*(b-a)/2
    print(f'{i} {I[i]:8.4f}')

